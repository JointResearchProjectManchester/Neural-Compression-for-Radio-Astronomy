Starting training...
Shape of images before processing: torch.Size([4, 1, 1, 150, 150])
Traceback (most recent call last):
  File "/share/nas2_3/adey/github/Neural-Compression-for-Radio-Astronomy/vqvae/main_autoencoder_option1.py", line 137, in <module>
    mvn = MultivariateNormal(loc=recon_flat, scale_tril=identity)
  File "/share/nas2_3/adey/.venv/lib/python3.9/site-packages/torch/distributions/multivariate_normal.py", line 150, in __init__
    super(MultivariateNormal, self).__init__(batch_shape, event_shape, validate_args=validate_args)
  File "/share/nas2_3/adey/.venv/lib/python3.9/site-packages/torch/distributions/distribution.py", line 54, in __init__
    valid = constraint.check(value)
  File "/share/nas2_3/adey/.venv/lib/python3.9/site-packages/torch/distributions/constraints.py", line 445, in check
    value_tril = value.tril()
torch.cuda.OutOfMemoryError: CUDA out of memory. Tried to allocate 7.54 GiB (GPU 0; 39.41 GiB total capacity; 5.74 GiB already allocated; 6.07 GiB free; 5.79 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF